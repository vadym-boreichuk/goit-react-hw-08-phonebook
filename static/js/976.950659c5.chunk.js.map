{"version":3,"file":"static/js/976.950659c5.chunk.js","mappings":"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","sources":["components/ContactForm/Form.styled.js","redux/contacts/contactSelectors.js","hooks/useContacts.js","components/ContactForm/Form.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  font-size: 18px;\n  border: none;\n  border-radius: 10px;\n  padding-left: 10px;\n  outline: 0;\n  &:focus,\n  &:hover {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 1),\n      -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n      23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1) inset;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 50px;\n  font-size: 25px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  border: none;\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.2);\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 1),\n      -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n      23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1) inset;\n  }\n  cursor: pointer;\n  margin-bottom: 25px;\n  margin-top: 20px;\n`;\n","export const selectContacts = state => state.contacts.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.contacts.filter.filter;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectContactsFilter,\n} from 'redux/contacts/contactSelectors';\n\nexport const useContacts = () => {\n  const selectedContacts = useSelector(selectContacts);\n  const IsLoading = useSelector(selectIsLoading);\n  const contactError = useSelector(selectError);\n  const contactFilter = useSelector(selectContactsFilter);\n  return {\n    selectedContacts,\n    IsLoading,\n    contactError,\n    contactFilter,\n  };\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Button, Form, Input, Label } from './Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { useContacts } from '../../hooks/useContacts';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { selectedContacts } = useContacts();\n  const contactName = selectedContacts.map(name => name.name);\n\n  const addCont = event => {\n    event.preventDefault();\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.number.value;\n    if (contactName.includes(name)) {\n      return toast.warn(`This contact is already in phonebook!`);\n    }\n    dispatch(addContact({ name, number }));\n\n    event.currentTarget.reset();\n  };\n  return (\n    <Form onSubmit={addCont}>\n      <Label className=\"user-name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Button, Item, Parag } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\n\nexport const ContactItem = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Parag>\n        {name}: {phone}\n      </Parag>\n      <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n  width: 400px;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  width: 500px;\n  justify-content: center;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useContacts } from '../../hooks/useContacts';\nimport { Div, List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  // Отримуємо частини стану\n  const { selectedContacts } = useContacts();\n  const { contactFilter } = useContacts();\n  const filterValue = contactFilter.toLowerCase();\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return selectedContacts;\n    }\n\n    return selectedContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <Div>\n      <List>\n        {visibilityContacts &&\n          visibilityContacts.map(({ name, number, id }) => (\n            <ContactItem key={id} name={name} phone={number} id={id} />\n          ))}\n      </List>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  font-size: 18px;\n  border: none;\n  border-radius: 10px;\n  padding-left: 10px;\n  outline: 0;\n  &:focus,\n  &:hover {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 1),\n      -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n      23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1) inset;\n  }\n`;\n","import { Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handlerFilter = evt => {\n    dispatch(addFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input name=\"filter\" onChange={handlerFilter} />\n    </Label>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/Form';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contain, Div } from 'components/App/App.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { Outlet } from 'react-router-dom';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <HelmetProvider>\n      <Contain>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <Outlet />\n        <Div>\n          <h1>Phonebook</h1>\n          <ContactForm />\n        </Div>\n        <Div>\n          <h1>Contacts</h1>\n          <Filter />\n          <ContactList />\n        </Div>\n      </Contain>\n    </HelmetProvider>\n  );\n}\n\nexport default Contacts;\n"],"names":["Form","styled","Input","Label","Button","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","useContacts","selectedContacts","useSelector","IsLoading","contactError","contactFilter","ContactForm","dispatch","useDispatch","contactName","map","name","onSubmit","event","preventDefault","currentTarget","elements","value","number","includes","toast","addContact","reset","className","type","pattern","title","required","ContactItem","phone","id","onClick","deleteContact","List","Div","ContactList","filterValue","toLowerCase","visibilityContacts","contact","Filter","onChange","evt","addFilter","target","useEffect","fetchContacts"],"sourceRoot":""}